#!/usr/local/bin/bash
# check the dependencies
for name in  bash youtube-dl ffmpeg
do
  [[ $(command -v $name 2>/dev/null) ]] || { echo -en "\n$name needs to be installed. Install it manually or with package manager"; }
done

# help function
function usage { 
    printf "\n"
    echo "-h    Shows this help message"
    echo "-v    Link to Youtube video to make the ringtone from. Uses youtube-dl"
    echo "-p    Path (with a name) to the output (.m4r) file. Default is $HOME/Downloads/ringtone.m4r"
    echo "-o    Offset (in seconds) the starting point of the ringtone. Default is 0 sec"
    echo "-l    Lenght of the final ringtone. Starting from the offset. Default and max is 30 sec"
}

# if no input argument found, exit the script with usage
if [[ ${#} -eq 0 ]]; then
    usage
    exit
fi

# Initiate defaults
filepath_interim="$HOME/Downloads/ringtone.m4a"
filepath_out="$HOME/Downloads/ringtone.m4r" # path to final ringtone file
offset=0
length=30


while getopts ":hv:p::o::l::" arg; do
  case ${arg} in
    h) # help menu
      usage
      exit
      ;;
    v) # a link to a youtube video
      video_link="${OPTARG}"
      ;;
    p) # full path to output file
      filepath_out="${OPTARG}"
      ;;
    o) # offset for ringtone
      offset=${OPTARG}
      ;;
    l) # length or the ringtone, def is 30s
       # note, that it should be not higher than 30
      if [[ $OPTARG -ge 30 ]]; then
            echo "Invalid lenght, ringtone length is restircted to 30 sec or less"
            exit 3
      fi
      length=${OPTARG}
      ;;
    :) # missing option argument
      echo "$0: Must supply an argument to -$OPTARG." >&2
      exit 1
      ;;
    ?) # invalid option
      echo "Invalid option: -${OPTARGS}."
      exit 2
      ;;
  esac
done

# download link with specified name√∏
youtube-dl  -i --extract-audio --audio-format m4a  --audio-quality 0 "$video_link" -o "$filepath_interim"  -q
ffmpeg -i "$filepath_interim" -acodec copy -f ipod -ss  "$offset"  -t "$length" "$filepath_out"  -loglevel fatal 
rm "$filepath_interim" # cleanup of the temporary file
